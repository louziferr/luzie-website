{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/luzieahrens/Arbeit/Websiten/SofteWare/softe-ware/app/projekte/wortwahl/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { BarChart } from \"@mui/x-charts\";\nimport { useEffect, useRef, useState } from \"react\";\n\ninterface Woerter {\n  [key: string]: { [word: string]: number };\n}\n\nexport default function Home() {\n  const [afd, setAfd] = useState(50);\n  const [linke, setLinke] = useState(50);\n  const [cdu, setCdu] = useState(50);\n  const [gruene, setGruene] = useState(50);\n  const [spd, setSpd] = useState(50);\n  const [fdp, setFdp] = useState(50);\n  const [bsw, setBsw] = useState(50);\n\n  const data = [\n    { party: \"CDU\", count: cdu },\n    { party: \"Grüne\", count: gruene },\n    { party: \"AFD\", count: afd },\n    { party: \"SPD\", count: spd },\n    { party: \"FDP\", count: fdp },\n    { party: \"Linke\", count: linke },\n    { party: \"BSW\", count: bsw },\n  ];\n\n  const [word, setWord] = useState(\"\");\n  const [gesucht, setGesucht] = useState(\"\");\n  const [woerter, setWoerter] = useState<Woerter | null>(null);\n\n  useEffect(() => {\n    fetch(\"/woerter.json\") // Pfad zur JSON-Datei im `public`-Ordner\n      .then((response) => response.json())\n      .then((jsonData) => {\n        setWoerter(jsonData);\n      })\n      .catch((error) => console.error(\"Fehler beim Laden der JSON:\", error));\n  }, []);\n\n  async function getWordCount() {\n    if (!word) return;\n    if (!woerter) return;\n    if (word.includes(\" \")) {\n      setMessage(\"Bitte nur einen Begriff eingeben!\");\n      return;\n    }\n    setGesucht(word);\n    setMessage(\"\");\n    const wordLow = word.toLowerCase();\n    if (woerter[\"afd\"].hasOwnProperty(wordLow)) {\n      setAfd(woerter[\"afd\"][wordLow]);\n    } else {\n      setAfd(0);\n    }\n    if (woerter[\"cdu\"].hasOwnProperty(wordLow)) {\n      setCdu(woerter[\"cdu\"][wordLow]);\n    } else {\n      setCdu(0);\n    }\n    if (woerter[\"spd\"].hasOwnProperty(wordLow)) {\n      setSpd(woerter[\"spd\"][wordLow]);\n    } else {\n      setSpd(0);\n    }\n    if (woerter[\"gruene\"].hasOwnProperty(wordLow)) {\n      setGruene(woerter[\"gruene\"][wordLow]);\n    } else {\n      setGruene(0);\n    }\n    if (woerter[\"fdp\"].hasOwnProperty(wordLow)) {\n      setFdp(woerter[\"fdp\"][wordLow]);\n    } else {\n      setFdp(0);\n    }\n    if (woerter[\"linke\"].hasOwnProperty(wordLow)) {\n      setLinke(woerter[\"linke\"][wordLow]);\n    } else {\n      setLinke(0);\n    }\n    if (woerter[\"bsw\"].hasOwnProperty(wordLow)) {\n      setBsw(woerter[\"bsw\"][wordLow]);\n    } else {\n      setBsw(0);\n    }\n    console.log(data);\n  }\n\n  const barChartRef = useRef<HTMLDivElement | null>(null); // Referenz auf das div-Element\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (barChartRef.current) {\n        setBarWidth(barChartRef.current.offsetWidth);\n      }\n    };\n\n    // ResizeObserver zur Überwachung der Größenänderung\n    const resizeObserver = new ResizeObserver(handleResize);\n    if (barChartRef.current) {\n      resizeObserver.observe(barChartRef.current); // Div-Element beobachten\n    }\n\n    // Initiale Breite setzen\n    handleResize();\n\n    return () => {\n      if (barChartRef.current) {\n        resizeObserver.unobserve(barChartRef.current); // Beobachtung beenden\n      }\n    };\n  }, []);\n\n  const [barWidth, setBarWidth] = useState(0);\n  const [message, setMessage] = useState(\"\");\n\n  function checkIfEnter(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key === \"Enter\") {\n      getWordCount();\n    }\n  }\n  return (\n    <>\n      <div className=\"flex items-center justify-center flex-wrap pt-[80px] bg-darkBlue\">\n        <div className=\"min-h-screen bg-white md:p-4 md:w-2/3 border-x-2 border-gray-500 flex-wrap flex flex-col items-center justify-start\">\n          <h1 className=\"text-3xl pt-8 pb-4 text-darkBlue animate-fade-down\">\n            Wahlprogramme\n          </h1>\n          <h1 className=\"font-dmSerif pb-4 text-blue animate-fade-down\">\n            Bundestagswahl 2025\n          </h1>\n          <div className=\"flex items-center justify-center p-8 gap-x-4\">\n            <img\n              className=\"animate-fade-right animate-delay-200\"\n              src=\"/election.svg\"\n              alt=\"Election\"\n              width=\"100\"\n            />\n            <img\n              className=\"animate-fade animate-delay-200\"\n              src=\"/checklist.svg\"\n              alt=\"Checklist\"\n              width=\"80\"\n            />\n            <img\n              className=\"animate-fade-left animate-delay-200\"\n              src=\"/brainstorm.svg\"\n              alt=\"Brainstorm\"\n              width=\"100\"\n            />\n          </div>\n          <div className=\"p-2 animate-fade\">\n            <p className=\"text-lg text-center p-2 text-red\">\n              Finde heraus, welche Parteien über deine Themen sprechen!\n            </p>\n            <div className=\"flex items-center justify-center\">\n              <p className=\"max-w-[500px] p-2 pb-8 text-center\">\n                Auf dieser Website kannst du die Wahlprogramme aller großen\n                Parteien zur kommenden Bundestagswahl nach bestimmten Begriffen\n                durchsuchen. Einfach ein Schlagwort eingeben - zum Beispiel\n                Klimaschutz, Steuern oder Bildung - und sehen, welche Partei es\n                wie oft in ihrem Programm erwähnt. Die Ergebnisse werden als\n                Grafik präsentiert, sodass du auf einen Blick erkennen kannst,\n                welche Themen für welche Partei besonders wichtig sind.\n              </p>\n            </div>\n          </div>\n\n          <p className=\"font-dmSerif text-lg animate-fade\">\n            Suche nach einem Begriff\n          </p>\n          <input\n            className=\"font-sans rounded p-2 m-4 border-2 border-black animate-fade\"\n            placeholder=\"Begriff eingeben\"\n            onChange={(e) => setWord(e.target.value)}\n            onKeyDown={checkIfEnter}\n          ></input>\n          <button\n            className=\"bg-darkBlue text-white rounded p-2 mb-4\"\n            onClick={getWordCount}\n          >\n            Suchen\n          </button>\n\n          {message && (\n            <p className=\"font-dmSerif text-lg text-rose-700\">{message}</p>\n          )}\n          {gesucht && (\n            <p className=\"font-sans text-lg pt-4\">\n              Begriff: <b>{gesucht}</b>\n            </p>\n          )}\n          <div className=\"w-full max-w-[700px] p-2\">\n            <div\n              className=\"w-full pb-4 mt-2 flex items-center justify-center flex-wrap\"\n              ref={barChartRef}\n            >\n              <BarChart\n                dataset={data}\n                yAxis={[\n                  {\n                    scaleType: \"band\",\n                    dataKey: \"party\",\n                    colorMap: {\n                      type: \"ordinal\",\n                      colors: [\n                        \"#111111\" /* CDU */,\n                        \"#52BD54\" /* Grüne */,\n                        \"#3794E1\" /* AFD */,\n                        \"#E10F0F\" /* SPD */,\n                        \"#F2CD27\" /* FDP */,\n                        \"#E84040\" /* Linke */,\n                        \"#9B69AF\" /* BSW */,\n                      ],\n                    },\n                  },\n                ]}\n                series={[{ dataKey: \"count\" }]}\n                layout={\"horizontal\"}\n                width={barWidth}\n                margin={{ left: 50, right: 30, top: 20, bottom: 20 }}\n                height={data.length * 50}\n                grid={{ vertical: true }}\n              />\n            </div>\n          </div>\n\n          <div className=\"mt-8 w-full lg:w-2/3 h-[3px] border-b-2 border-dotted border-gray-500\"></div>\n          <p className=\"pt-8 font-dmSerif text-center text-black pb-8\">\n            Programmcode einsehbar auf:{\" \"}\n            <a\n              href=\"https://github.com/louziferr/wahlprogramme2025\"\n              className=\"text-blue\"\n            >\n              Github\n            </a>\n          </p>\n          <div className=\"w-full lg:w-2/3 mb-8 h-[3px] border-b-2 border-dotted border-gray-500\"></div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}